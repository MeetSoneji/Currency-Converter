/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package currencyconverter.java;

import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author KIIT
 */
public class CurrencyConverter extends javax.swing.JFrame {

    /**
     * Creates new form CurrencyConverter
     */
    public CurrencyConverter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        txtAmount = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtFrom = new javax.swing.JComboBox<>();
        txtTo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        reset = new javax.swing.JButton();
        convert = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(176, 240, 240));

        jPanel1.setBackground(new java.awt.Color(204, 241, 230));

        jButton1.setBackground(new java.awt.Color(199, 231, 223));
        jButton1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 51, 51));
        jButton1.setText("Currency Converter");
        jButton1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtAmount.setForeground(new java.awt.Color(153, 153, 153));
        txtAmount.setText("Enter the Amount");
        txtAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAmountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAmountFocusLost(evt);
            }
        });
        txtAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmountActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(204, 204, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Amount");

        txtFrom.setBackground(new java.awt.Color(204, 204, 255));
        txtFrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "USD", "EUR", "JPY", "INR", "AUD", "CAD" }));
        txtFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFromActionPerformed(evt);
            }
        });

        txtTo.setBackground(new java.awt.Color(204, 204, 255));
        txtTo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "USD", "EUR", "JPY", "INR", "AUD", "CAD" }));
        txtTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtToActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(204, 204, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("From");

        jLabel3.setBackground(new java.awt.Color(204, 204, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("To");

        reset.setBackground(new java.awt.Color(199, 231, 223));
        reset.setText("Reset");
        reset.setBorder(new javax.swing.border.MatteBorder(null));
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        convert.setBackground(new java.awt.Color(199, 231, 223));
        convert.setText("Convert");
        convert.setBorder(new javax.swing.border.MatteBorder(null));
        convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 102, 102));
        jButton2.setText("X");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(convert, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTo, 0, 236, Short.MAX_VALUE)
                            .addComponent(txtFrom, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtAmount))))
                .addContainerGap(109, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton2)
                .addGap(9, 9, 9)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(convert, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAmountActionPerformed

    private void convertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertActionPerformed
        // TODO add your handling code here:
        Double convert=0.0;
        Double amount= Double.parseDouble(txtAmount.getText());
//      USD
        if(txtFrom.getSelectedItem().toString()=="USD" && txtTo.getSelectedItem().toString()=="INR"){
            convert = amount*82.76; 
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="USD" && txtTo.getSelectedItem().toString()=="EUR"){
            convert = amount*0.92; 
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="USD" && txtTo.getSelectedItem().toString()=="JPY"){
            convert = amount*144.07;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="USD" && txtTo.getSelectedItem().toString()=="AUD"){
            convert = amount*1.51;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}  
        else if(txtFrom.getSelectedItem().toString()=="USD" && txtTo.getSelectedItem().toString()=="CAD"){
            convert = amount*1.34;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="USD" && txtTo.getSelectedItem().toString()=="USD"){
            convert = amount*1;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
//        EUR
        else if(txtFrom.getSelectedItem().toString()=="EUR" && txtTo.getSelectedItem().toString()=="USD"){
            convert = amount*1.09; 
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="EUR" && txtTo.getSelectedItem().toString()=="JPY"){
            convert = amount*156.92;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="EUR" && txtTo.getSelectedItem().toString()=="INR"){
            convert = amount*90.16;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}  
        else if(txtFrom.getSelectedItem().toString()=="EUR" && txtTo.getSelectedItem().toString()=="AUD"){
            convert = amount*1.64;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="EUR" && txtTo.getSelectedItem().toString()=="CAD"){
            convert = amount*1.46;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="EUR" && txtTo.getSelectedItem().toString()=="EUR"){
            convert = amount*1;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
//      JPY      
        else if(txtFrom.getSelectedItem().toString()=="JPY" && txtTo.getSelectedItem().toString()=="USD"){
            convert = amount*0.0069; 
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="JPY" && txtTo.getSelectedItem().toString()=="EUR"){
            convert = amount*0.0064;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="JPY" && txtTo.getSelectedItem().toString()=="JPY"){
            convert = amount*1;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}  
        else if(txtFrom.getSelectedItem().toString()=="JPY" && txtTo.getSelectedItem().toString()=="INR"){
            convert = amount*0.57;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="JPY" && txtTo.getSelectedItem().toString()=="AUD"){
            convert = amount*0.010;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="JPY" && txtTo.getSelectedItem().toString()=="CAD"){
            convert = amount*0.0093;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
//        INR
        else if(txtFrom.getSelectedItem().toString()=="INR" && txtTo.getSelectedItem().toString()=="USD"){
            convert = amount*0.012; 
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="INR" && txtTo.getSelectedItem().toString()=="EUR"){
            convert = amount*0.011;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="INR" && txtTo.getSelectedItem().toString()=="JPY"){
            convert = amount*1.74;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}  
        else if(txtFrom.getSelectedItem().toString()=="INR" && txtTo.getSelectedItem().toString()=="INR"){
            convert = amount*1;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="INR" && txtTo.getSelectedItem().toString()=="AUD"){
            convert = amount*0.018;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="INR" && txtTo.getSelectedItem().toString()=="CAD"){
            convert = amount*0.016;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
//      AUD
        else if(txtFrom.getSelectedItem().toString()=="AUD" && txtTo.getSelectedItem().toString()=="USD"){
            convert = amount*0.66; 
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="AUD" && txtTo.getSelectedItem().toString()=="EUR"){
            convert = amount*0.61;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="AUD" && txtTo.getSelectedItem().toString()=="JPY"){
            convert = amount*95.47;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}  
        else if(txtFrom.getSelectedItem().toString()=="AUD" && txtTo.getSelectedItem().toString()=="INR"){
            convert = amount*54.84;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="AUD" && txtTo.getSelectedItem().toString()=="AUD"){
            convert = amount*1;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="AUD" && txtTo.getSelectedItem().toString()=="CAD"){
            convert = amount*0.89;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        
//        CAD
        else if(txtFrom.getSelectedItem().toString()=="CAD" && txtTo.getSelectedItem().toString()=="USD"){
            convert = amount*0.75; 
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="CAD" && txtTo.getSelectedItem().toString()=="EUR"){
            convert = amount*0.69;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="CAD" && txtTo.getSelectedItem().toString()=="JPY"){
            convert = amount*107.83;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}  
        else if(txtFrom.getSelectedItem().toString()=="CAD" && txtTo.getSelectedItem().toString()=="INR"){
            convert = amount*61.94;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="CAD" && txtTo.getSelectedItem().toString()=="AUD"){
            convert = amount*1.13;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        else if(txtFrom.getSelectedItem().toString()=="CAD" && txtTo.getSelectedItem().toString()=="CAD"){
            convert = amount*1;
            JOptionPane.showMessageDialog(this,"The converted Amount is: "+convert.toString());}
        
        
        
        
    }//GEN-LAST:event_convertActionPerformed

    private void txtFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFromActionPerformed

    private void txtToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtToActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        txtAmount.setText("Enter the Amount");
        txtAmount.setForeground(new Color(153,153,153));
    }//GEN-LAST:event_resetActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtAmountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAmountFocusGained
        // TODO add your handling code here:
        if(txtAmount.getText().equals("Enter the Amount")){
            txtAmount.setText("");
            txtAmount.setForeground(new Color(153,153,153));
        }
            
            
    }//GEN-LAST:event_txtAmountFocusGained

    private void txtAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAmountFocusLost
        // TODO add your handling code here:
        if(txtAmount.getText().equals("")){
            txtAmount.setText("Enter the Amount");
            txtAmount.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_txtAmountFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CurrencyConverter().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton convert;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton reset;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JComboBox<String> txtFrom;
    private javax.swing.JComboBox<String> txtTo;
    // End of variables declaration//GEN-END:variables
}
